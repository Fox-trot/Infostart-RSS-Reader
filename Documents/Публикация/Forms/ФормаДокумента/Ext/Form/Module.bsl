
&НаСервереБезКонтекста
Процедура Отметить(Ссылка)
	Док = Ссылка.ПолучитьОбъект();
	Док.ПометкаУдаления	= Ложь;
	Док.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстПолучить(Знач Ссылка)
	Возврат ?(ПустаяСтрока(Ссылка.ТекстСтатьи), Ссылка.Описание, Ссылка.ТекстСтатьи);
КонецФункции

&НаСервере
Процедура ТекстУстановить(Знач Ссылка)
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.Публикация") Тогда
		Содержание.Удалить();
		Содержание.УстановитьHTML(Инфостарт.Причесать(ТекстПолучить(Ссылка)), Новый Структура);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Отказ = Истина;
	Иначе
		ТекстУстановить(Объект.Ссылка);
	КонецЕсли;
	ВремяСтарт	= ТекущаяДата();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Если НЕ Объект.Проведен И ТекущаяДата() - ВремяСтарт > ОтметитьКакПрочтенноеЧерезСек() Тогда
		Отметить(Объект.Ссылка);
		Если ТипЗнч(ВладелецФормы) = Тип("ТаблицаФормы") Тогда
			ВладелецФормы.Обновить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	НаКлиенте.ОткрытьПоСсылке(Объект.Гиперссылка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	ТекстУстановить(Параметр);
КонецПроцедуры

&НаСервере
Функция ОтметитьКакПрочтенноеЧерезСек()
	Возврат Регламент.ОтметитьКакПрочтенноеЧерезСек();
КонецФункции
